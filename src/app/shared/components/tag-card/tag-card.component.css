.tag-card-wrapper {
    display: flex;
    align-items: center;
    justify-content: space-between;
}

.tag-card-navigation {
    display: flex;
    /* justify-content: center; */
    align-items: center;

    gap: 12px;
}

.tag-card {
    width: 100%;
    height: 40px;

    padding: 12px;

    font-family: "Gilroy";
    font-size: 14px;
    font-weight: 600;

    color: var(--primary-text-color);
    border-radius: 12px;
}

.checkbox-wrapper-40 {
    --border-color: rgb(44, 45, 53);
    --border-width: 2.4px;
    --checked-bg-color: rgb(29, 119, 255);
  }
  
  .checkbox-wrapper-40 label {
    display: block;
    max-width: 100%;
    margin: 0 auto;
  }
  
  .checkbox-wrapper-40 input[type='checkbox'] {
    -webkit-appearance: none;
    appearance: none;
    vertical-align: middle;
    background: rgb(30, 31, 36);
    font-size: 1.8em;
    border-radius: 50%;
    display: inline-block;
  
    border: 1px solid rgb(44, 45, 53);
    width: 1em;
    height: 1em;
    position: relative;
  }
  
  .checkbox-wrapper-40 input[type='checkbox']:before,
  .checkbox-wrapper-40 input[type='checkbox']:after {
    content: '';
    position: absolute;
    background: white;
    width: calc(var(--border-width) * 3);
    height: var(--border-width);
    top: 50%;
    left: 30%;
    transform-origin: left center;
  }
  
  .checkbox-wrapper-40 input[type='checkbox']:before {
    transform: rotate(45deg)
      translate(calc(var(--border-width) / -2), calc(var(--border-width) / -2))
      scaleX(0);
    transition: transform 200ms ease-in 200ms;
  }
  
  .checkbox-wrapper-40 input[type='checkbox']:after {
    width: calc(var(--border-width) * 5);
    transform: rotate(-45deg) translateY(calc(var(--border-width) * 2)) scaleX(0);
    transform-origin: left center;
    transition: transform 200ms ease-in;
  }
  
  .checkbox-wrapper-40 input[type='checkbox']:checked {
    background-color: var(--checked-bg-color);
  }
  
  .checkbox-wrapper-40 input[type='checkbox']:checked:before {
    transform: rotate(45deg)
      translate(calc(var(--border-width) / -2), calc(var(--border-width) / -2))
      scaleX(1);
    transition: transform 200ms ease-in;
  }
  
  .checkbox-wrapper-40 input[type='checkbox']:checked:after {
    width: calc(var(--border-width) * 5);
    transform: rotate(-45deg) translateY(calc(var(--border-width) * 2)) scaleX(1);
    transition: transform 200ms ease-out 200ms;
  }
  
  .checkbox-wrapper-40 input[type='checkbox']:focus {
    outline: calc(var(--border-width) / 2) dotted rgba(0, 0, 0, 0.25);
  }
  